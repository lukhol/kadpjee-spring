<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-4.2.xsd">
 
	<http auto-config="true">
		<intercept-url pattern="/admin**" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/user**" access="hasAnyRole('ROLE_USER', 'ROLE_ADMIN')" />
		<intercept-url pattern="/login**" access="isAnonymous()" />
		<intercept-url pattern="/permitall" access="permitAll" />
		<intercept-url pattern="/teacher**" access="hasRole('ROLE_TEACHER')"/>
		<intercept-url pattern="/userandteacher" access="hasAnyRole('ROLE_USERANDTEACHER')" />
		<access-denied-handler error-page="/accessDenied.html" />
		<!--  -->
		<form-login 
		    login-page="/login.html" 
		    default-target-url="/" 
		    always-use-default-target="false"
			authentication-failure-url="/login.html?error"
			username-parameter="login"
			password-parameter="password" />
		<logout logout-success-url="/login.html?logout" />
		<!-- enable csrf protection -->
		<csrf/>
	</http>
	
	<!-- Żeby działały adnotacje PreAuthorize, PostAuthorize, Secured -->
	<global-method-security secured-annotations="enabled" pre-post-annotations="enabled"/>
	
	<authentication-manager>
	  <authentication-provider>
	    <user-service>
			<user name="admin" password="admin" authorities="ROLE_ADMIN" />
	    </user-service>
	  </authentication-provider>
	  <!-- Drugi authentication-provider -  -->
	  <authentication-provider user-service-ref="myUserDetailsService">
	  		<password-encoder hash="bcrypt"/>  
	  </authentication-provider>
	</authentication-manager>
 
</beans:beans>